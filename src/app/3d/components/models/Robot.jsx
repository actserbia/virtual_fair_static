/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useRef, useState } from 'react';
import PropTypes from 'prop-types';
import { useGLTF, Html } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { changeCursorOnHover } from '@/3d/lib/helpers/cursor';
import CloudFlareLogoImg from '@/components/CloudFlareLogoImg/CloudFlareLogoImg';
import NszLogo from '@/components/icons/NszLogo';

const Robot = (props) => {
  const { nodes, materials } = useGLTF('/models/robo.glb');
  const [hovered, hover] = useState(false);
  const robot = useRef();
  const robot1 = useRef();
  const { tooltip, company_logo, company_name, infoPult } = props;

  useEffect(() => {
    robot.current.randomTime = Math.random() * 33;
  }, []);

  useFrame(({ clock }) => {
    robot.current.position.y =
      Math.sin(robot.current.randomTime + clock.getElapsedTime() * 3) * 0.05 +
      props.position[1] -
      3.5;
  });

  useFrame(() => {
    changeCursorOnHover(hovered);
  }, [hovered]);

  return (
    <group
      {...props}
      dispose={null}
      onPointerOver={() => {
        hover(true);
      }}
      onPointerOut={() => {
        hover(false);
      }}
      onClick={props.onClick}
    >
      {tooltip && (
        <Html
          position={[0.2, 1, 0]}
          className={`${
            hovered ? 'opacity-100' : 'opacity-0'
          } _3d-content-wrapper tooltip transition-all duration-200 ease-in`}
        >
          <div className={`_3d-content ${hovered && 'active'}`}>
            {infoPult ? (
              <figure className="mb-2">
                <NszLogo width="120" height="50" />
              </figure>
            ) : (
              <figure className="relative mb-2 aspect-auto h-9 w-2/5">
                <CloudFlareLogoImg
                  imgSrc={
                    company_logo !== undefined &&
                    company_logo !== '' &&
                    company_logo !== '/images/accounts/default.jpg'
                      ? company_logo
                      : `${process.env.NEXT_PUBLIC_FE_URL}images/accounts/default-3d.jpg`
                  }
                  alt={company_name}
                  objectPosition="left"
                />
              </figure>
            )}
            <div className="_3d-description">{tooltip}</div>
          </div>
        </Html>
      )}
      <group ref={robot} rotation={[-Math.PI / 2, 0, 0]}>
        <group scale={0.01}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Capsule040_1.geometry}
            material={materials.ROBOTNIK_BLACK}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Capsule040_2.geometry}
            // material={{...materials.ROBOTNIK_GREY, color: hovered ? new THREE.Color('#b0e0e6'): new THREE.Color('#b0e0e6')}}
            ref={robot1}
          >
            <meshStandardMaterial
              {...materials.ROBOTNIK_GREY}
              color={hovered ? '#80a3a8' : '#bababa'}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Capsule040_3.geometry}
            material={materials.ROBOTNIK_WHITE}
          >
            <meshStandardMaterial
              {...materials.ROBOTNIK_WHITE}
              color={hovered ? '#b0e0e6' : 'white'}
            />
          </mesh>
        </group>
      </group>
    </group>
  );
};

Robot.propTypes = {
  tooltip: PropTypes.string,
};

Robot.defaultProps = {
  tooltip: null,
};

export default Robot;

useGLTF.preload('/models/robo.glb');
